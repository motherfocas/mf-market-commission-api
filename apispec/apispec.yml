openapi: "3.0.0"
info:
  version: 1.0.0
  title: MotherFocas Market Commission
  description: API documentation for MotherFocas Market Commission.
#servers:
#  - url: http://petstore.swagger.io/v1
paths:
  /accesstoken/:
    post:
      summary: Request access token
      operationId: requestAccessToken
      tags:
        - Access Token
      security:
        []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
      responses:
        '200':
          description: 'Access token created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '400':
          description: 'Bad Request. Hint: invalid JSON'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '500':
          description: 'Internal Server Error. Hint: something crashed so hard'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /user/:
    post:
      summary: Create new user
      operationId: createUser
      tags:
        - User
      security:
        []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: 'User created'
        '400':
          description: 'Bad Request. Hint: invalid JSON'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: 'Unprocessable Entity. Hint: username already exists'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '500':
          description: 'Internal Server Error. Hint: something crashed so hard'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /purchase/:
    get:
      summary: List all purchases
      operationId: listPurchases
      tags:
        - Purchase
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'List of purchases'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Purchases"
    post:
      summary: Create purchase
      operationId: createPurchases
      tags:
        - Purchase
      security:
        - basicAuth: []
      responses:
        '201':
          description: 'Purchase created'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Purchase"
        '422':
          description: 'Unprocessable Entity. Hint: random purchase error'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        '500':
          description: 'Internal Server Error. Hint: something crashed so hard'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
  /purchase/{id}/:
    get:
      summary: Get details of a purchase
      operationId: getPurchase
      tags:
        - Purchase
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the purchase
          schema:
            type: string
      responses:
        '200':
          description: 'Found purchase'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Purchase"
        '404':
          description: 'Not found purchase'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
    patch:
      summary: Update purchase
      operationId: updatePurchase
      tags:
        - Purchase
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the purchase
          schema:
            type: string
      responses:
        '200':
          description: 'Purchase updated'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Purchase"
        '401':
          description: 'Not authorized'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        '422':
          description: 'Unprocessable Entity. Hint: random purchase error'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        '500':
          description: 'Internal Server Error. Hint: something crashed so hard'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
    delete:
      summary: Delete purchase
      operationId: deletePurchase
      tags:
        - Purchase
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the purchase
          schema:
            type: string
      responses:
        '200':
          description: 'Purchase deleted'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Purchase"
        '401':
          description: 'Not authorized'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        '404':
          description: 'Not found purchase'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        '422':
          description: 'Unprocessable Entity. Hint: random purchase error'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        '500':
          description: 'Internal Server Error. Hint: something crashed so hard'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
components:
  schemas:
    User:
      required:
        - username
        - plain_password
      properties:
        username:
          type: string
        plain_password:
          type: string
    Purchase:
      required:
        - name
        - items
      properties:
        id:
          type: number
        name:
          type: string
        items:
          type: array
          $ref: '#/components/schemas/Items'
    Purchases:
      required:
        - purchases
      properties:
        purchases:
          type: array
          items:
            $ref: '#/components/schemas/Purchase'
    Item:
      required:
        - name
        - price
      properties:
        id:
          type: number
        name:
          type: string
        price:
          type: number
    Items:
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    AccessTokenRequest:
      required:
        - grant_type
        - client_id
        - scope
        - username
        - password
      properties:
        grant_type:
          type: string
        client_id:
          type: string
        scope:
          type: string
        username:
          type: string
        password:
          type: string
    AccessTokenResponse:
      required:
        - token_type
        - expires_in
        - access_token
        - refresh_token
      properties:
        token_type:
          type: string
        expires_in:
          type: number
        access_token:
          type: string
        refresh_token:
          type: string
    Message:
      required:
        - message
      properties:
        message:
          type: string
  securitySchemes:
    oAuth:
      type: oauth2
      description: This API uses OAuth 2 with the password grant flow. [More info](https://oauth2.thephpleague.com/authorization-server/resource-owner-password-credentials-grant/)
      flows:
        password:
          authorizationUrl: https://mmc-api.motherfocas.eu/accesstoken
          scopes:
            default: default permission, cyka!
security:
  - oAuth: []
